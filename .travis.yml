dist: trusty
osx_image: xcode8
language: cpp

cache:
  pip: true
  directories:
    - $HOME/.pip-cache/

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.6
      - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main'
      - key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'
    packages:
      - gcc-4.9
      - g++-4.9
      - clang-3.6
      - clang-format-4.0
      - cmake
      - git
      # Optional dependencies
      - libtbb-dev
      # coveralls dependencies
      - gem
      - lcov
      # caffe-importer dependencies
      - libprotobuf-dev
      - protobuf-compiler

branches:
  only:
    - master
    - feat/xtensor_integration
    - feat/decouple_activations

env:
  global:
    - USE_TBB=ON
    - BUILD_TESTS=ON
    - BUILD_EXAMPLES=ON
    - COVERALLS=OFF           # only ON for gcc on linux
    - USE_ASAN=OFF            # only ON for gcc on linux
    - CLANG_FORMAT_CHECK=OFF  # only ON for one job

matrix:
  include:
    # Only do a clang format check
    - os: linux
      compiler: clang
      sudo: false
      env: CLANG_FORMAT_CHECK=ON BUILD_TESTS=OFF BUILD_EXAMPLES=OFF USE_AVX=OFF USE_SSE=OFF USE_DOUBLE=OFF

    # Next three jobs are on linux with clang compiler
    # Other specifics - USE_TBB=OFF
    - os: linux
      compiler: clang
      sudo: false
      env: USE_SSE=OFF USE_AVX=OFF USE_DOUBLE=OFF USE_TBB=OFF

    - os: linux
      compiler: clang
      sudo: false
      env: USE_SSE=ON USE_AVX=ON USE_DOUBLE=OFF USE_TBB=OFF

    - os: linux
      compiler: clang
      sudo: false
      env: USE_SSE=ON USE_AVX=ON USE_DOUBLE=ON USE_TBB=OFF

    # One job are on osx with clang compiler
    - os: osx
      compiler: clang
      sudo: false
      env: USE_SSE=OFF USE_AVX=OFF USE_DOUBLE=OFF

    # Next three jobs are on linux with gcc compiler
    # sudo: required because of higher memory requirement
    # Container builds provide 4GB memory while VMs provde 7.5GB
    # Other specifics = COVERALLS=ON, USE_ASAN=ON
    - os: linux
      compiler: gcc
      sudo: required
      env: USE_SSE=OFF USE_AVX=OFF USE_DOUBLE=OFF COVERALLS=ON USE_ASAN=ON

    - os: linux
      compiler: gcc
      sudo: required
      env: USE_SSE=ON USE_AVX=ON USE_DOUBLE=OFF COVERALLS=ON USE_ASAN=ON

    - os: linux
      compiler: gcc
      sudo: required
      env: USE_SSE=ON USE_AVX=ON USE_DOUBLE=ON COVERALLS=ON USE_ASAN=ON

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ]; then
       export CC="gcc-4.9";
       export CXX="g++-4.9";
    fi
  - gcc --version
  - g++ --version

install:
  - bash -x .travis/install.sh
  - gem install coveralls-lcov

before_script:
  - if [ "$COVERALLS" = "ON" ]; then
      lcov --directory . --zerocounters;
    fi
  - cmake -DUSE_TBB=$USE_TBB
          -DUSE_SSE=$USE_SSE
          -DUSE_AVX=$USE_AVX
          -DUSE_DOUBLE=$USE_DOUBLE
          -DBUILD_TESTS=$BUILD_TESTS
          -DCOVERALLS=$COVERALLS
          -DUSE_ASAN=$USE_ASAN
          -DBUILD_EXAMPLES=$BUILD_EXAMPLES .;

script:
  - make -j2;
  - if [ "$CLANG_FORMAT_CHECK" == "ON" ]; then
      make clang-format-check;
    else
      test/tiny_dnn_test;
    fi

after_success:
  - if [ "$COVERALLS" == "ON" ]; then
      lcov --directory . --capture --output-file coverage.info;
      lcov --remove coverage.info 'test/*' 'third_party/*' 'cereal/*' '/usr/*' 'tiny_dnn/io/caffe/caffe.pb.*' --output-file coverage.info;
      lcov --list coverage.info;
      coveralls-lcov --source-encoding=ISO-8859-1 coverage.info;
    fi
